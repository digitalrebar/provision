.. Copyright (c) 2021 RackN Inc.
.. Licensed under the Apache License, Version 2.0 (the "License");
.. Digital Rebar documentation under Digital Rebar master license
.. index::
  pair: Digital Rebar Provision; Quick Start

.. _rs_quickstart:

Quick Start Guide
~~~~~~~~~~~~~~~~~

This document will guide you through installing and configuring Digital Rebar.  It will also walk through provisioning a guest OS using Digital Rebar.  For this guide we are going to show a basic virtual environment where all systems, including the digital rebar instance reside on the same virtual server and network.

We also recommend consulting the `video guide <https://youtu.be/v-KcvYrUoE0>`_ of this process.  Other helpful videos are available including our `advanced features showcase <https://www.youtube.com/playlist?list=PLXPBeIrpXjfigvrXEQIJxXmFdTHqobooH>`_.

Prerequisites
-------------

Digital Rebar endpoints can run on physical, virtual, cloud, or container instances.  All instances should have at least the following minimum requirements.  You must install Digital Rebar to use it, there is no SaaS version.  :ref:`rs_self_managed_why`

This guide will configure Digital Rebar to use systemd to control the service.  If you are concerned about installing Digital Rebar as a service, please review our :ref:`rs_install_dev` guide to install Digital Rebar in an isolated directory.

This graphic shows the basic layout for the quick start system example:

.. image:: images/quick_start_network.png
  :width: 100%
  :alt: Basic layout for a Digital Rebar Quick Start

.. _rs_qs_preparation:

Hardware
========

* 1 or more CPU cores
* A minimun of 4 GB of memory
* A minimum of 20 GB of space (60 GB is recommended)

Operating Systems
=================

* Linux (Centos 8 is recommended)
* MacOS

Software
========

The following packages are needed for installation.

* bash
* curl
* tar
* sha256sum (linux), shasum (MacOS)

Network
=======

Most Digital Rebar environments require detailed knowledge of your network and DHCP environments.  For this guide, we will use the following.

All hosts in the subnet should communicate to the DRP instance using the ports listed at :ref:`rs_arch_port`.

Guest VMs
=========

* 1 or more virtual CPU cores
* A minimum of 2 GB of memory (4 is recommended)
* A minimum of 10 GB of space

.. _rs_qs_install:

Install Digital Rebar Endpoint
------------------------------

Run the following command in a shell or terminal:

.. code-block:: bash

    curl -fsSL get.rebar.digital/stable | bash -s -- install --universal

.. warning::  It is important that ``--universal`` is the first argument after the ``install`` option.  Any arguments appearing BEFORE ``--universal`` will NOT be processed. 

The command will download the stable version of Digital Rebar, and content bundles needed to support Universal workflows.  It then extracts files, verifies prerequisites are installed, and creates the needed directories and links under ``/var/lib/dr-provision``.

The `install <http://get.rebar.digital/stable/>`_ script has many additional options including ``remove`` that are documented in its help and explored in other install guides.

Once the installation script completes, a Digital Rebar endpoint will be running your local system.

Other Installation Guides
=========================

There are other installation options available.  You can find instructions for them below.

* :ref:`rs_install` details more complex installs including offline/airgap.
* :ref:`rs_install_dev` for developers running DRP interactively.
* :ref:`rs_install_docker` for trial users minimizing their install requirements.
* :ref:`rs_install_cloud` for non-PXE / Cloud-Only installation process (no DHCP required)
* `Edge Lab with RPi <http://edgelab.digital>`_ is a self-contained Digital Rebar lab running on Raspberry Pi computers.

.. _rs_qs_license:

UX and License 
--------------

All Digital Rebar operations run locally and behind your firewall. RackN *never* has direct access to your DRP endpoint.

The Digital Rebar UX is hosted at `RackN <https://portal.rackn.io/>`_ for most users.  RackN does not have access to your data, credentials, or provisioning APIs.  The RackN portal runs as a single-page app *locally* in your browser.  All DRP API calls remain behind your firewall. 

To start, open the Digital Rebar API:

  ::

    https://<ip_address_of_your_endpoint>:8092/


You will be redirected to the `RackN Portal UX <https://portal.rackn.io>`_ after you visit the Digital Rebar API port and accept the self-signed certificate generated by the installation.


Login to Digital Rebar:

  ::

    username: rocketskates
    password: r0cketsk8ts


After login, you will be prompted to create and download a extendable trial license that enables most enterprise feature of Digital Rebar.  If you save the generated license file, you'll be able to use it to bypass this process in the future.

.. _rs_qs_ux_bootstrap:

UX System Bootstrap Wizard
--------------------------

On the top left section of the *Info & Preferences* page, the `RackN Portal <https://portal.rackn.io>`_ shows the steps needed to create a fully operational Digital Rebar endpoint.

A quick start system will have some initial configuration already done.  Work through the bootstrap check list until all items have green check marks.  The final *Machines* step requires actions outside of Digital Rebar, consult :ref:`rs_qs_first_machine` for assistance.

If you prefer command line actions over a UX, all of the UX Wizard steps can also be performed using the steps below.

.. _rs_qs_cli_bootstrap:

CLI System Bootstrap (optional)
-------------------------------

These :ref:`rs_cli` bootstrapping steps include the ones suggested by the install script.

To use DRPCLI, you need to set the target endpoint and credentials.  This can be done per call using command line flags; however, most users prefer to set environment variables for this purpose.

.. code-block:: bash

    export RS_ENDPOINT=https://<ip_address_of_your_endpoint>:8092/
    export RS_KEY=rocketskates:r0cketsk8ts

First, set a more secure password for your endpoint.

.. code-block:: bash

    mypass="D1gitalR3bar"
    drpcli users password rocketskates $mypass
    export RS_KEY=rocketskates:$mypass

Next, define the provisioning Subnet in Digital Rebar DHCP.  Since you _must_ include all of the necessary DHCP boot options to correctly PXE boot a Machine, we recommend using the UX to create Subnets because it has logic to determine sane defaults.

The following command line example contains the JSON Subnet and DHCP definitions.  You *MUST* modify the network parameters to match your environment.

.. code-block:: bash

    ###
    #  EXAMPLE - please modify the below values according to your environment  !!!
    ###

    echo '{
      "Name": "local_subnet",
      "Subnet": "10.10.16.10/24",
      "ActiveStart": "10.10.16.100",
      "ActiveEnd": "10.10.16.254",
      "ActiveLeaseTime": 60,
      "Enabled": true,
      "ReservedLeaseTime": 7200,
      "Strategy": "MAC",
      "Options": [
        { "Code": 3, "Value": "10.10.16.1", "Description": "Default Gateway" },
        { "Code": 6, "Value": "8.8.8.8", "Description": "DNS Servers" },
        { "Code": 15, "Value": "example.com", "Description": "Domain Name" }
      ]
    }' > /tmp/local_subnet.json

    vim /tmp/local_subnet.json

    drpcli subnets create - < /tmp/local_subnet.json


Finally, install one of these popular trial operating systems.

.. code-block:: bash

    drpcli bootenvs uploadiso ubuntu-20.04-install # optional, requires at least 3G of free space
    drpcli bootenvs uploadiso centos-8-install # optional, requires at least 30G of free space

Note that ``drpcli bootenvs uploadiso`` command is a helper command that combines two common steps.  It fetchs the ISO referenced in the bootenv from the internet and then uploads the ISO to Digital Rebar.  If you perform these steps many times, we recommend storing the downloaded ISO media locally and then uploading it using ``drpcli isos upload``.

Review the :ref:`rs_qs_ux_bootstrap` to ensure that all steps have been completed.

.. _rs_qs_first_machine:

Provision a Machine
-------------------

Create network bootable virtual machine (physical machines on the DHCP network will work too):

* with at least 2 Gb of RAM (4 Gb is preferred)
* set to network boot first
* attached to Digital Rebar provisioning network (aka Layer 2 subnet)

Power on the machine.  No further action is required.

The machine should boot into the Sledgehammer discovery operating system.  Typically, the machine console looks like:

    ::

      Digital Rebar: Sledgehammer ###................................####
      Kernel 3.10.0-693.21.1.el7.x86_64 on an x86_64

      d0c-c4-7a-e5-48-b6 login:

Note the version may be different than is listed above.

After the boot is complete, the UX *Machines* page should show the newly discovered machine.

If you have installed another operating system ISO besides Sledgehammer, then you can now provision an operating system by setting the target workflow on the machine:

#. Select the target machine (indicated with a check in the left most box)
#. Click the "Profiles" bulk action tab   
#. Select the target profile (typically ``universal-application-ubuntu-20.04.2`` or ``universal-application-centos-8``)
#. Apply the profile to the machine by clicking the ``+`` button to the right of the profile
#. Click the "Machines" tab
#. Select the target workflow from the action list at the top of the page (typically ``universal-linux-install``)
#. Press the "Run Workflow" button (looks like a play icon next to the workflow list)

You should see immediate updates to the machine's stages and tasks as Digital Rebar processes the workflow.

After installation completes, you can quickly return to Sledgehammer by running the ``universal-discover`` workflow.

.. _rs_qs_next_steps:

Advanced Features Catalog (next steps)
--------------------------------------

Digital Rebar is capable of automated workflow management of the boot process, power control, and much more.  This quickstart walks through the simplest process to get you up and running with a single test install.  Please review the rest of the documentation for further configuration details and information on automation of your provisioning environment.

The UX Catalog contains a list of available extensions to Digital Rebar that are avaible for installation.  Choosing an item from the Catalog will automatically download and install the capability.  All items run locally in your Digital Rebar endpoint, no connection to RackN is required after the download.

Fully automated provisioning control requires use of plugins for Power Management actions.  These are done through the IPMI subsystem, with a specific IPMI plugin for a specific environments.  Some existing plugins exist and are documented in :ref:`rs_setup`.

.. _rs_qs_cleanup:

Uninstall
---------

Once you are finished exploring Digital Rebar, you can uninstall the service using the following command:

.. code-block:: bash

    curl -fsSL get.rebar.digital/stable | bash -s -- remove

Note that ``remove`` will *not* remove the data files stored in ``/var/lib/dr-provision``, ``/etc/dr-provision``, or ``/usr/share/dr-provision``.  Include the ``--remove-data`` flag for a full clean-up.
